<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="44"><g><title>[[stack]] (1 samples, 2.27%)</title><rect x="0.0000%" y="629" width="2.2727%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50">[..</text></g><g><title>&lt;toml::tokens::Token as core::cmp::PartialEq&gt;::eq (1 samples, 2.27%)</title><rect x="0.0000%" y="613" width="2.2727%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50">&lt;..</text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.27%)</title><rect x="2.2727%" y="613" width="2.2727%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="2.5227%" y="623.50">&lt;..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="613" width="2.2727%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="4.7955%" y="623.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="597" width="2.2727%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="4.7955%" y="607.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="581" width="2.2727%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="4.7955%" y="591.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="565" width="2.2727%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="4.7955%" y="575.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="549" width="2.2727%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="4.7955%" y="559.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="533" width="2.2727%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="4.7955%" y="543.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="517" width="2.2727%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="4.7955%" y="527.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="501" width="2.2727%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="4.7955%" y="511.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="485" width="2.2727%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="4.7955%" y="495.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="469" width="2.2727%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="4.7955%" y="479.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="453" width="2.2727%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="4.7955%" y="463.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="4.5455%" y="437" width="2.2727%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="4.7955%" y="447.50">[..</text></g><g><title>cargo::commands::metadata::exec (1 samples, 2.27%)</title><rect x="6.8182%" y="613" width="2.2727%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="7.0682%" y="623.50">c..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (1 samples, 2.27%)</title><rect x="6.8182%" y="597" width="2.2727%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="7.0682%" y="607.50">c..</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (1 samples, 2.27%)</title><rect x="6.8182%" y="581" width="2.2727%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="7.0682%" y="591.50">c..</text></g><g><title>cargo::ops::resolve::get_resolved_packages (1 samples, 2.27%)</title><rect x="6.8182%" y="565" width="2.2727%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="7.0682%" y="575.50">c..</text></g><g><title>cargo::core::registry::PackageRegistry::get (1 samples, 2.27%)</title><rect x="6.8182%" y="549" width="2.2727%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="7.0682%" y="559.50">c..</text></g><g><title>cargo::core::package::PackageSet::new (1 samples, 2.27%)</title><rect x="6.8182%" y="533" width="2.2727%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="7.0682%" y="543.50">c..</text></g><g><title>curl::multi::Multi::new (1 samples, 2.27%)</title><rect x="6.8182%" y="517" width="2.2727%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="7.0682%" y="527.50">c..</text></g><g><title>Curl_multi_handle (1 samples, 2.27%)</title><rect x="6.8182%" y="501" width="2.2727%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="7.0682%" y="511.50">C..</text></g><g><title>Curl_hash_init (1 samples, 2.27%)</title><rect x="6.8182%" y="485" width="2.2727%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="7.0682%" y="495.50">C..</text></g><g><title>__GI___libc_malloc (1 samples, 2.27%)</title><rect x="6.8182%" y="469" width="2.2727%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="7.0682%" y="479.50">_..</text></g><g><title>_int_malloc (1 samples, 2.27%)</title><rect x="6.8182%" y="453" width="2.2727%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="7.0682%" y="463.50">_..</text></g><g><title>malloc_consolidate (1 samples, 2.27%)</title><rect x="6.8182%" y="437" width="2.2727%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="7.0682%" y="447.50">m..</text></g><g><title>cargo::core::resolver::activate_deps_loop (1 samples, 2.27%)</title><rect x="9.0909%" y="613" width="2.2727%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="9.3409%" y="623.50">c..</text></g><g><title>cargo::core::resolver::activate (1 samples, 2.27%)</title><rect x="9.0909%" y="597" width="2.2727%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="9.3409%" y="607.50">c..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (1 samples, 2.27%)</title><rect x="9.0909%" y="581" width="2.2727%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="9.3409%" y="591.50">c..</text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 2.27%)</title><rect x="9.0909%" y="565" width="2.2727%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="9.3409%" y="575.50">a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.27%)</title><rect x="9.0909%" y="549" width="2.2727%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="1"/><text x="9.3409%" y="559.50">&lt;..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps::_{{closure}} (1 samples, 2.27%)</title><rect x="9.0909%" y="533" width="2.2727%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="9.3409%" y="543.50">c..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (1 samples, 2.27%)</title><rect x="9.0909%" y="517" width="2.2727%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="9.3409%" y="527.50">c..</text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (1 samples, 2.27%)</title><rect x="9.0909%" y="501" width="2.2727%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="9.3409%" y="511.50">&lt;..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (1 samples, 2.27%)</title><rect x="9.0909%" y="485" width="2.2727%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="1"/><text x="9.3409%" y="495.50">&lt;..</text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (1 samples, 2.27%)</title><rect x="9.0909%" y="469" width="2.2727%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="1"/><text x="9.3409%" y="479.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.27%)</title><rect x="9.0909%" y="453" width="2.2727%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="1"/><text x="9.3409%" y="463.50">&lt;..</text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (1 samples, 2.27%)</title><rect x="9.0909%" y="437" width="2.2727%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="1"/><text x="9.3409%" y="447.50">c..</text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (1 samples, 2.27%)</title><rect x="9.0909%" y="421" width="2.2727%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="1"/><text x="9.3409%" y="431.50">c..</text></g><g><title>serde_json::de::from_slice (1 samples, 2.27%)</title><rect x="9.0909%" y="405" width="2.2727%" height="15" fill="rgb(231,60,39)" fg:x="4" fg:w="1"/><text x="9.3409%" y="415.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 2.27%)</title><rect x="9.0909%" y="389" width="2.2727%" height="15" fill="rgb(208,69,12)" fg:x="4" fg:w="1"/><text x="9.3409%" y="399.50">&lt;..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 2.27%)</title><rect x="9.0909%" y="373" width="2.2727%" height="15" fill="rgb(235,93,37)" fg:x="4" fg:w="1"/><text x="9.3409%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 2.27%)</title><rect x="9.0909%" y="357" width="2.2727%" height="15" fill="rgb(213,116,39)" fg:x="4" fg:w="1"/><text x="9.3409%" y="367.50">a..</text></g><g><title>&lt;cargo::sources::registry::remote::RemoteRegistry as cargo::sources::registry::RegistryData&gt;::assert_index_locked (1 samples, 2.27%)</title><rect x="11.3636%" y="421" width="2.2727%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="11.6136%" y="431.50">&lt;..</text></g><g><title>std::path::Path::_starts_with (1 samples, 2.27%)</title><rect x="11.3636%" y="405" width="2.2727%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="11.6136%" y="415.50">s..</text></g><g><title>std::path::iter_after (1 samples, 2.27%)</title><rect x="11.3636%" y="389" width="2.2727%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="11.6136%" y="399.50">s..</text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.27%)</title><rect x="11.3636%" y="373" width="2.2727%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="11.6136%" y="383.50">&lt;..</text></g><g><title>std::path::Components::parse_next_component (1 samples, 2.27%)</title><rect x="11.3636%" y="357" width="2.2727%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="11.6136%" y="367.50">s..</text></g><g><title>cargo::core::resolver::resolve (2 samples, 4.55%)</title><rect x="11.3636%" y="613" width="4.5455%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="2"/><text x="11.6136%" y="623.50">cargo..</text></g><g><title>cargo::core::resolver::activate_deps_loop (2 samples, 4.55%)</title><rect x="11.3636%" y="597" width="4.5455%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="2"/><text x="11.6136%" y="607.50">cargo..</text></g><g><title>cargo::core::resolver::activate (2 samples, 4.55%)</title><rect x="11.3636%" y="581" width="4.5455%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="2"/><text x="11.6136%" y="591.50">cargo..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (2 samples, 4.55%)</title><rect x="11.3636%" y="565" width="4.5455%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="2"/><text x="11.6136%" y="575.50">cargo..</text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 4.55%)</title><rect x="11.3636%" y="549" width="4.5455%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="2"/><text x="11.6136%" y="559.50">alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 4.55%)</title><rect x="11.3636%" y="533" width="4.5455%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="2"/><text x="11.6136%" y="543.50">&lt;core..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps::_{{closure}} (2 samples, 4.55%)</title><rect x="11.3636%" y="517" width="4.5455%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="2"/><text x="11.6136%" y="527.50">cargo..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (2 samples, 4.55%)</title><rect x="11.3636%" y="501" width="4.5455%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="2"/><text x="11.6136%" y="511.50">cargo..</text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (2 samples, 4.55%)</title><rect x="11.3636%" y="485" width="4.5455%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="2"/><text x="11.6136%" y="495.50">&lt;carg..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (2 samples, 4.55%)</title><rect x="11.3636%" y="469" width="4.5455%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="2"/><text x="11.6136%" y="479.50">&lt;carg..</text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (2 samples, 4.55%)</title><rect x="11.3636%" y="453" width="4.5455%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="2"/><text x="11.6136%" y="463.50">cargo..</text></g><g><title>cargo::sources::registry::index::RegistryIndex::summaries (2 samples, 4.55%)</title><rect x="11.3636%" y="437" width="4.5455%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="2"/><text x="11.6136%" y="447.50">cargo..</text></g><g><title>core::str::converts::from_utf8 (1 samples, 2.27%)</title><rect x="13.6364%" y="421" width="2.2727%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="1"/><text x="13.8864%" y="431.50">c..</text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 2.27%)</title><rect x="13.6364%" y="405" width="2.2727%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="1"/><text x="13.8864%" y="415.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.27%)</title><rect x="15.9091%" y="549" width="2.2727%" height="15" fill="rgb(222,148,37)" fg:x="7" fg:w="1"/><text x="16.1591%" y="559.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 2.27%)</title><rect x="15.9091%" y="533" width="2.2727%" height="15" fill="rgb(234,67,33)" fg:x="7" fg:w="1"/><text x="16.1591%" y="543.50">a..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1 samples, 2.27%)</title><rect x="15.9091%" y="517" width="2.2727%" height="15" fill="rgb(247,98,35)" fg:x="7" fg:w="1"/><text x="16.1591%" y="527.50">a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 2.27%)</title><rect x="15.9091%" y="501" width="2.2727%" height="15" fill="rgb(247,138,52)" fg:x="7" fg:w="1"/><text x="16.1591%" y="511.50">a..</text></g><g><title>cargo::commands::metadata::exec (2 samples, 4.55%)</title><rect x="15.9091%" y="581" width="4.5455%" height="15" fill="rgb(213,79,30)" fg:x="7" fg:w="2"/><text x="16.1591%" y="591.50">cargo..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (2 samples, 4.55%)</title><rect x="15.9091%" y="565" width="4.5455%" height="15" fill="rgb(246,177,23)" fg:x="7" fg:w="2"/><text x="16.1591%" y="575.50">cargo..</text></g><g><title>core::ptr::drop_in_place&lt;cargo::ops::resolve::WorkspaceResolve&gt; (1 samples, 2.27%)</title><rect x="18.1818%" y="549" width="2.2727%" height="15" fill="rgb(230,62,27)" fg:x="8" fg:w="1"/><text x="18.4318%" y="559.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.27%)</title><rect x="18.1818%" y="533" width="2.2727%" height="15" fill="rgb(216,154,8)" fg:x="8" fg:w="1"/><text x="18.4318%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;cargo::sources::registry::RegistrySource&gt; (1 samples, 2.27%)</title><rect x="18.1818%" y="517" width="2.2727%" height="15" fill="rgb(244,35,45)" fg:x="8" fg:w="1"/><text x="18.4318%" y="527.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.27%)</title><rect x="18.1818%" y="501" width="2.2727%" height="15" fill="rgb(251,115,12)" fg:x="8" fg:w="1"/><text x="18.4318%" y="511.50">&lt;..</text></g><g><title>__GI___libc_free (1 samples, 2.27%)</title><rect x="18.1818%" y="485" width="2.2727%" height="15" fill="rgb(240,54,50)" fg:x="8" fg:w="1"/><text x="18.4318%" y="495.50">_..</text></g><g><title>_int_free (1 samples, 2.27%)</title><rect x="18.1818%" y="469" width="2.2727%" height="15" fill="rgb(233,84,52)" fg:x="8" fg:w="1"/><text x="18.4318%" y="479.50">_..</text></g><g><title>malloc_consolidate (1 samples, 2.27%)</title><rect x="18.1818%" y="453" width="2.2727%" height="15" fill="rgb(207,117,47)" fg:x="8" fg:w="1"/><text x="18.4318%" y="463.50">m..</text></g><g><title>cargo::main (3 samples, 6.82%)</title><rect x="15.9091%" y="613" width="6.8182%" height="15" fill="rgb(249,43,39)" fg:x="7" fg:w="3"/><text x="16.1591%" y="623.50">cargo::ma..</text></g><g><title>cargo::cli::main (3 samples, 6.82%)</title><rect x="15.9091%" y="597" width="6.8182%" height="15" fill="rgb(209,38,44)" fg:x="7" fg:w="3"/><text x="16.1591%" y="607.50">cargo::cl..</text></g><g><title>cargo::ops::registry::needs_custom_http_transport (1 samples, 2.27%)</title><rect x="20.4545%" y="581" width="2.2727%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="20.7045%" y="591.50">c..</text></g><g><title>cargo::ops::registry::http_proxy (1 samples, 2.27%)</title><rect x="20.4545%" y="565" width="2.2727%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="20.7045%" y="575.50">c..</text></g><g><title>git2::config::Config::open_default (1 samples, 2.27%)</title><rect x="20.4545%" y="549" width="2.2727%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="1"/><text x="20.7045%" y="559.50">g..</text></g><g><title>libgit2_sys::init (1 samples, 2.27%)</title><rect x="20.4545%" y="533" width="2.2727%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="1"/><text x="20.7045%" y="543.50">l..</text></g><g><title>std::sync::once::Once::call_inner (1 samples, 2.27%)</title><rect x="20.4545%" y="517" width="2.2727%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="1"/><text x="20.7045%" y="527.50">s..</text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1 samples, 2.27%)</title><rect x="20.4545%" y="501" width="2.2727%" height="15" fill="rgb(208,190,38)" fg:x="9" fg:w="1"/><text x="20.7045%" y="511.50">s..</text></g><g><title>git_runtime_init (1 samples, 2.27%)</title><rect x="20.4545%" y="485" width="2.2727%" height="15" fill="rgb(235,213,38)" fg:x="9" fg:w="1"/><text x="20.7045%" y="495.50">g..</text></g><g><title>git_openssl_stream_global_init (1 samples, 2.27%)</title><rect x="20.4545%" y="469" width="2.2727%" height="15" fill="rgb(237,122,38)" fg:x="9" fg:w="1"/><text x="20.7045%" y="479.50">g..</text></g><g><title>X509_STORE_set_default_paths (1 samples, 2.27%)</title><rect x="20.4545%" y="453" width="2.2727%" height="15" fill="rgb(244,218,35)" fg:x="9" fg:w="1"/><text x="20.7045%" y="463.50">X..</text></g><g><title>by_file_ctrl (1 samples, 2.27%)</title><rect x="20.4545%" y="437" width="2.2727%" height="15" fill="rgb(240,68,47)" fg:x="9" fg:w="1"/><text x="20.7045%" y="447.50">b..</text></g><g><title>X509_load_cert_crl_file (1 samples, 2.27%)</title><rect x="20.4545%" y="421" width="2.2727%" height="15" fill="rgb(210,16,53)" fg:x="9" fg:w="1"/><text x="20.7045%" y="431.50">X..</text></g><g><title>PEM_X509_INFO_read_bio (1 samples, 2.27%)</title><rect x="20.4545%" y="405" width="2.2727%" height="15" fill="rgb(235,124,12)" fg:x="9" fg:w="1"/><text x="20.7045%" y="415.50">P..</text></g><g><title>ASN1_item_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="389" width="2.2727%" height="15" fill="rgb(224,169,11)" fg:x="9" fg:w="1"/><text x="20.7045%" y="399.50">A..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="373" width="2.2727%" height="15" fill="rgb(250,166,2)" fg:x="9" fg:w="1"/><text x="20.7045%" y="383.50">a..</text></g><g><title>asn1_template_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="357" width="2.2727%" height="15" fill="rgb(242,216,29)" fg:x="9" fg:w="1"/><text x="20.7045%" y="367.50">a..</text></g><g><title>asn1_template_noexp_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="341" width="2.2727%" height="15" fill="rgb(230,116,27)" fg:x="9" fg:w="1"/><text x="20.7045%" y="351.50">a..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="325" width="2.2727%" height="15" fill="rgb(228,99,48)" fg:x="9" fg:w="1"/><text x="20.7045%" y="335.50">a..</text></g><g><title>asn1_template_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="309" width="2.2727%" height="15" fill="rgb(253,11,6)" fg:x="9" fg:w="1"/><text x="20.7045%" y="319.50">a..</text></g><g><title>asn1_template_noexp_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="293" width="2.2727%" height="15" fill="rgb(247,143,39)" fg:x="9" fg:w="1"/><text x="20.7045%" y="303.50">a..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="277" width="2.2727%" height="15" fill="rgb(236,97,10)" fg:x="9" fg:w="1"/><text x="20.7045%" y="287.50">a..</text></g><g><title>x509_name_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="261" width="2.2727%" height="15" fill="rgb(233,208,19)" fg:x="9" fg:w="1"/><text x="20.7045%" y="271.50">x..</text></g><g><title>ASN1_item_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="245" width="2.2727%" height="15" fill="rgb(216,164,2)" fg:x="9" fg:w="1"/><text x="20.7045%" y="255.50">A..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="229" width="2.2727%" height="15" fill="rgb(220,129,5)" fg:x="9" fg:w="1"/><text x="20.7045%" y="239.50">a..</text></g><g><title>asn1_template_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="213" width="2.2727%" height="15" fill="rgb(242,17,10)" fg:x="9" fg:w="1"/><text x="20.7045%" y="223.50">a..</text></g><g><title>asn1_template_noexp_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="197" width="2.2727%" height="15" fill="rgb(242,107,0)" fg:x="9" fg:w="1"/><text x="20.7045%" y="207.50">a..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="181" width="2.2727%" height="15" fill="rgb(251,28,31)" fg:x="9" fg:w="1"/><text x="20.7045%" y="191.50">a..</text></g><g><title>asn1_template_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="165" width="2.2727%" height="15" fill="rgb(233,223,10)" fg:x="9" fg:w="1"/><text x="20.7045%" y="175.50">a..</text></g><g><title>asn1_template_noexp_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="149" width="2.2727%" height="15" fill="rgb(215,21,27)" fg:x="9" fg:w="1"/><text x="20.7045%" y="159.50">a..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="133" width="2.2727%" height="15" fill="rgb(232,23,21)" fg:x="9" fg:w="1"/><text x="20.7045%" y="143.50">a..</text></g><g><title>asn1_template_ex_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="117" width="2.2727%" height="15" fill="rgb(244,5,23)" fg:x="9" fg:w="1"/><text x="20.7045%" y="127.50">a..</text></g><g><title>asn1_template_noexp_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="101" width="2.2727%" height="15" fill="rgb(226,81,46)" fg:x="9" fg:w="1"/><text x="20.7045%" y="111.50">a..</text></g><g><title>asn1_item_embed_d2i (1 samples, 2.27%)</title><rect x="20.4545%" y="85" width="2.2727%" height="15" fill="rgb(247,70,30)" fg:x="9" fg:w="1"/><text x="20.7045%" y="95.50">a..</text></g><g><title>asn1_d2i_ex_primitive (1 samples, 2.27%)</title><rect x="20.4545%" y="69" width="2.2727%" height="15" fill="rgb(212,68,19)" fg:x="9" fg:w="1"/><text x="20.7045%" y="79.50">a..</text></g><g><title>ASN1_STRING_set (1 samples, 2.27%)</title><rect x="20.4545%" y="53" width="2.2727%" height="15" fill="rgb(240,187,13)" fg:x="9" fg:w="1"/><text x="20.7045%" y="63.50">A..</text></g><g><title>CRYPTO_realloc (1 samples, 2.27%)</title><rect x="20.4545%" y="37" width="2.2727%" height="15" fill="rgb(223,113,26)" fg:x="9" fg:w="1"/><text x="20.7045%" y="47.50">C..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (1 samples, 2.27%)</title><rect x="22.7273%" y="613" width="2.2727%" height="15" fill="rgb(206,192,2)" fg:x="10" fg:w="1"/><text x="22.9773%" y="623.50">c..</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (1 samples, 2.27%)</title><rect x="22.7273%" y="597" width="2.2727%" height="15" fill="rgb(241,108,4)" fg:x="10" fg:w="1"/><text x="22.9773%" y="607.50">c..</text></g><g><title>cargo::ops::resolve::resolve_with_registry (1 samples, 2.27%)</title><rect x="22.7273%" y="581" width="2.2727%" height="15" fill="rgb(247,173,49)" fg:x="10" fg:w="1"/><text x="22.9773%" y="591.50">c..</text></g><g><title>cargo::ops::lockfile::write_pkg_lockfile (1 samples, 2.27%)</title><rect x="22.7273%" y="565" width="2.2727%" height="15" fill="rgb(224,114,35)" fg:x="10" fg:w="1"/><text x="22.9773%" y="575.50">c..</text></g><g><title>cargo::ops::lockfile::resolve_to_string_orig (1 samples, 2.27%)</title><rect x="22.7273%" y="549" width="2.2727%" height="15" fill="rgb(245,159,27)" fg:x="10" fg:w="1"/><text x="22.9773%" y="559.50">c..</text></g><g><title>cargo::ops::lockfile::serialize_resolve (1 samples, 2.27%)</title><rect x="22.7273%" y="533" width="2.2727%" height="15" fill="rgb(245,172,44)" fg:x="10" fg:w="1"/><text x="22.9773%" y="543.50">c..</text></g><g><title>cargo::ops::lockfile::emit_package (1 samples, 2.27%)</title><rect x="22.7273%" y="517" width="2.2727%" height="15" fill="rgb(236,23,11)" fg:x="10" fg:w="1"/><text x="22.9773%" y="527.50">c..</text></g><g><title>alloc::fmt::format (1 samples, 2.27%)</title><rect x="22.7273%" y="501" width="2.2727%" height="15" fill="rgb(205,117,38)" fg:x="10" fg:w="1"/><text x="22.9773%" y="511.50">a..</text></g><g><title>core::fmt::Write::write_fmt (1 samples, 2.27%)</title><rect x="22.7273%" y="485" width="2.2727%" height="15" fill="rgb(237,72,25)" fg:x="10" fg:w="1"/><text x="22.9773%" y="495.50">c..</text></g><g><title>core::fmt::write (1 samples, 2.27%)</title><rect x="22.7273%" y="469" width="2.2727%" height="15" fill="rgb(244,70,9)" fg:x="10" fg:w="1"/><text x="22.9773%" y="479.50">c..</text></g><g><title>core::iter::adapters::zip::zip (1 samples, 2.27%)</title><rect x="22.7273%" y="453" width="2.2727%" height="15" fill="rgb(217,125,39)" fg:x="10" fg:w="1"/><text x="22.9773%" y="463.50">c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 2.27%)</title><rect x="22.7273%" y="437" width="2.2727%" height="15" fill="rgb(235,36,10)" fg:x="10" fg:w="1"/><text x="22.9773%" y="447.50">&lt;..</text></g><g><title>core::cmp::min (1 samples, 2.27%)</title><rect x="22.7273%" y="421" width="2.2727%" height="15" fill="rgb(251,123,47)" fg:x="10" fg:w="1"/><text x="22.9773%" y="431.50">c..</text></g><g><title>core::cmp::Ord::min (1 samples, 2.27%)</title><rect x="22.7273%" y="405" width="2.2727%" height="15" fill="rgb(221,13,13)" fg:x="10" fg:w="1"/><text x="22.9773%" y="415.50">c..</text></g><g><title>core::cmp::min_by (1 samples, 2.27%)</title><rect x="22.7273%" y="389" width="2.2727%" height="15" fill="rgb(238,131,9)" fg:x="10" fg:w="1"/><text x="22.9773%" y="399.50">c..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="25.0000%" y="533" width="2.2727%" height="15" fill="rgb(211,50,8)" fg:x="11" fg:w="1"/><text x="25.2500%" y="543.50">&lt;..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.27%)</title><rect x="25.0000%" y="517" width="2.2727%" height="15" fill="rgb(245,182,24)" fg:x="11" fg:w="1"/><text x="25.2500%" y="527.50">&lt;..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="25.0000%" y="501" width="2.2727%" height="15" fill="rgb(242,14,37)" fg:x="11" fg:w="1"/><text x="25.2500%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 2.27%)</title><rect x="25.0000%" y="485" width="2.2727%" height="15" fill="rgb(246,228,12)" fg:x="11" fg:w="1"/><text x="25.2500%" y="495.50">a..</text></g><g><title>toml::de::Deserializer::dotted_key (1 samples, 2.27%)</title><rect x="27.2727%" y="517" width="2.2727%" height="15" fill="rgb(213,55,15)" fg:x="12" fg:w="1"/><text x="27.5227%" y="527.50">t..</text></g><g><title>toml::tokens::Tokenizer::table_key (1 samples, 2.27%)</title><rect x="27.2727%" y="501" width="2.2727%" height="15" fill="rgb(209,9,3)" fg:x="12" fg:w="1"/><text x="27.5227%" y="511.50">t..</text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 2.27%)</title><rect x="27.2727%" y="485" width="2.2727%" height="15" fill="rgb(230,59,30)" fg:x="12" fg:w="1"/><text x="27.5227%" y="495.50">t..</text></g><g><title>toml::de::Deserializer::value (1 samples, 2.27%)</title><rect x="29.5455%" y="517" width="2.2727%" height="15" fill="rgb(209,121,21)" fg:x="13" fg:w="1"/><text x="29.7955%" y="527.50">t..</text></g><g><title>toml::tokens::Tokenizer::eat_spanned (1 samples, 2.27%)</title><rect x="29.5455%" y="501" width="2.2727%" height="15" fill="rgb(220,109,13)" fg:x="13" fg:w="1"/><text x="29.7955%" y="511.50">t..</text></g><g><title>toml::tokens::Tokenizer::expect_spanned (1 samples, 2.27%)</title><rect x="31.8182%" y="517" width="2.2727%" height="15" fill="rgb(232,18,1)" fg:x="14" fg:w="1"/><text x="32.0682%" y="527.50">t..</text></g><g><title>toml::de::Deserializer::tables (4 samples, 9.09%)</title><rect x="27.2727%" y="533" width="9.0909%" height="15" fill="rgb(215,41,42)" fg:x="12" fg:w="4"/><text x="27.5227%" y="543.50">toml::de::Des..</text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 2.27%)</title><rect x="34.0909%" y="517" width="2.2727%" height="15" fill="rgb(224,123,36)" fg:x="15" fg:w="1"/><text x="34.3409%" y="527.50">t..</text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 2.27%)</title><rect x="34.0909%" y="501" width="2.2727%" height="15" fill="rgb(240,125,3)" fg:x="15" fg:w="1"/><text x="34.3409%" y="511.50">&lt;..</text></g><g><title>cargo::ops::cargo_read_manifest::read_package (6 samples, 13.64%)</title><rect x="25.0000%" y="613" width="13.6364%" height="15" fill="rgb(205,98,50)" fg:x="11" fg:w="6"/><text x="25.2500%" y="623.50">cargo::ops::cargo_rea..</text></g><g><title>cargo::util::toml::read_manifest (6 samples, 13.64%)</title><rect x="25.0000%" y="597" width="13.6364%" height="15" fill="rgb(205,185,37)" fg:x="11" fg:w="6"/><text x="25.2500%" y="607.50">cargo::util::toml::re..</text></g><g><title>cargo::util::toml::parse (6 samples, 13.64%)</title><rect x="25.0000%" y="581" width="13.6364%" height="15" fill="rgb(238,207,15)" fg:x="11" fg:w="6"/><text x="25.2500%" y="591.50">cargo::util::toml::pa..</text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (6 samples, 13.64%)</title><rect x="25.0000%" y="565" width="13.6364%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="6"/><text x="25.2500%" y="575.50">&lt;toml::value::Value a..</text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (6 samples, 13.64%)</title><rect x="25.0000%" y="549" width="13.6364%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="6"/><text x="25.2500%" y="559.50">&lt;&amp;mut toml::de::Deser..</text></g><g><title>toml::de::build_table_indices (1 samples, 2.27%)</title><rect x="36.3636%" y="533" width="2.2727%" height="15" fill="rgb(207,46,11)" fg:x="16" fg:w="1"/><text x="36.6136%" y="543.50">t..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 2.27%)</title><rect x="36.3636%" y="517" width="2.2727%" height="15" fill="rgb(241,35,35)" fg:x="16" fg:w="1"/><text x="36.6136%" y="527.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 2.27%)</title><rect x="36.3636%" y="501" width="2.2727%" height="15" fill="rgb(243,32,47)" fg:x="16" fg:w="1"/><text x="36.6136%" y="511.50">h..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.27%)</title><rect x="38.6364%" y="581" width="2.2727%" height="15" fill="rgb(247,202,23)" fg:x="17" fg:w="1"/><text x="38.8864%" y="591.50">a..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 2.27%)</title><rect x="38.6364%" y="565" width="2.2727%" height="15" fill="rgb(219,102,11)" fg:x="17" fg:w="1"/><text x="38.8864%" y="575.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.27%)</title><rect x="38.6364%" y="549" width="2.2727%" height="15" fill="rgb(243,110,44)" fg:x="17" fg:w="1"/><text x="38.8864%" y="559.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.27%)</title><rect x="38.6364%" y="533" width="2.2727%" height="15" fill="rgb(222,74,54)" fg:x="17" fg:w="1"/><text x="38.8864%" y="543.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 2.27%)</title><rect x="38.6364%" y="517" width="2.2727%" height="15" fill="rgb(216,99,12)" fg:x="17" fg:w="1"/><text x="38.8864%" y="527.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.27%)</title><rect x="38.6364%" y="501" width="2.2727%" height="15" fill="rgb(226,22,26)" fg:x="17" fg:w="1"/><text x="38.8864%" y="511.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 2.27%)</title><rect x="38.6364%" y="485" width="2.2727%" height="15" fill="rgb(217,163,10)" fg:x="17" fg:w="1"/><text x="38.8864%" y="495.50">c..</text></g><g><title>__memcpy_sse2_unaligned (1 samples, 2.27%)</title><rect x="38.6364%" y="469" width="2.2727%" height="15" fill="rgb(213,25,53)" fg:x="17" fg:w="1"/><text x="38.8864%" y="479.50">_..</text></g><g><title>cargo::core::summary::Summary::new (1 samples, 2.27%)</title><rect x="40.9091%" y="581" width="2.2727%" height="15" fill="rgb(252,105,26)" fg:x="18" fg:w="1"/><text x="41.1591%" y="591.50">c..</text></g><g><title>cargo::core::summary::build_feature_map (1 samples, 2.27%)</title><rect x="40.9091%" y="565" width="2.2727%" height="15" fill="rgb(220,39,43)" fg:x="18" fg:w="1"/><text x="41.1591%" y="575.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.27%)</title><rect x="40.9091%" y="549" width="2.2727%" height="15" fill="rgb(229,68,48)" fg:x="18" fg:w="1"/><text x="41.1591%" y="559.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 2.27%)</title><rect x="40.9091%" y="533" width="2.2727%" height="15" fill="rgb(252,8,32)" fg:x="18" fg:w="1"/><text x="41.1591%" y="543.50">a..</text></g><g><title>__memcmp_avx2_movbe (1 samples, 2.27%)</title><rect x="40.9091%" y="517" width="2.2727%" height="15" fill="rgb(223,20,43)" fg:x="18" fg:w="1"/><text x="41.1591%" y="527.50">_..</text></g><g><title>cargo::util::toml::TomlManifest::to_real_manifest (3 samples, 6.82%)</title><rect x="38.6364%" y="597" width="6.8182%" height="15" fill="rgb(229,81,49)" fg:x="17" fg:w="3"/><text x="38.8864%" y="607.50">cargo::ut..</text></g><g><title>cargo::util::toml::targets::targets (1 samples, 2.27%)</title><rect x="43.1818%" y="581" width="2.2727%" height="15" fill="rgb(236,28,36)" fg:x="19" fg:w="1"/><text x="43.4318%" y="591.50">c..</text></g><g><title>cargo::util::toml::targets::configure (1 samples, 2.27%)</title><rect x="43.1818%" y="565" width="2.2727%" height="15" fill="rgb(249,185,26)" fg:x="19" fg:w="1"/><text x="43.4318%" y="575.50">c..</text></g><g><title>__GI___libc_free (1 samples, 2.27%)</title><rect x="43.1818%" y="549" width="2.2727%" height="15" fill="rgb(249,174,33)" fg:x="19" fg:w="1"/><text x="43.4318%" y="559.50">_..</text></g><g><title>_int_free (1 samples, 2.27%)</title><rect x="43.1818%" y="533" width="2.2727%" height="15" fill="rgb(233,201,37)" fg:x="19" fg:w="1"/><text x="43.4318%" y="543.50">_..</text></g><g><title>tcache_put (1 samples, 2.27%)</title><rect x="43.1818%" y="517" width="2.2727%" height="15" fill="rgb(221,78,26)" fg:x="19" fg:w="1"/><text x="43.4318%" y="527.50">t..</text></g><g><title>[unknown] (20 samples, 45.45%)</title><rect x="2.2727%" y="629" width="45.4545%" height="15" fill="rgb(250,127,30)" fg:x="1" fg:w="20"/><text x="2.5227%" y="639.50">[unknown]</text></g><g><title>cargo::util::toml::read_manifest (4 samples, 9.09%)</title><rect x="38.6364%" y="613" width="9.0909%" height="15" fill="rgb(230,49,44)" fg:x="17" fg:w="4"/><text x="38.8864%" y="623.50">cargo::util::..</text></g><g><title>cargo::util::toml::parse (1 samples, 2.27%)</title><rect x="45.4545%" y="597" width="2.2727%" height="15" fill="rgb(229,67,23)" fg:x="20" fg:w="1"/><text x="45.7045%" y="607.50">c..</text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (1 samples, 2.27%)</title><rect x="45.4545%" y="581" width="2.2727%" height="15" fill="rgb(249,83,47)" fg:x="20" fg:w="1"/><text x="45.7045%" y="591.50">&lt;..</text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 2.27%)</title><rect x="45.4545%" y="565" width="2.2727%" height="15" fill="rgb(215,43,3)" fg:x="20" fg:w="1"/><text x="45.7045%" y="575.50">&lt;..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="45.4545%" y="549" width="2.2727%" height="15" fill="rgb(238,154,13)" fg:x="20" fg:w="1"/><text x="45.7045%" y="559.50">&lt;..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.27%)</title><rect x="45.4545%" y="533" width="2.2727%" height="15" fill="rgb(219,56,2)" fg:x="20" fg:w="1"/><text x="45.7045%" y="543.50">&lt;..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="45.4545%" y="517" width="2.2727%" height="15" fill="rgb(233,0,4)" fg:x="20" fg:w="1"/><text x="45.7045%" y="527.50">&lt;..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.27%)</title><rect x="45.4545%" y="501" width="2.2727%" height="15" fill="rgb(235,30,7)" fg:x="20" fg:w="1"/><text x="45.7045%" y="511.50">&lt;..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="45.4545%" y="485" width="2.2727%" height="15" fill="rgb(250,79,13)" fg:x="20" fg:w="1"/><text x="45.7045%" y="495.50">&lt;..</text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 2.27%)</title><rect x="45.4545%" y="469" width="2.2727%" height="15" fill="rgb(211,146,34)" fg:x="20" fg:w="1"/><text x="45.7045%" y="479.50">&lt;..</text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 2.27%)</title><rect x="45.4545%" y="453" width="2.2727%" height="15" fill="rgb(228,22,38)" fg:x="20" fg:w="1"/><text x="45.7045%" y="463.50">&lt;..</text></g><g><title>__libc_csu_init (1 samples, 2.27%)</title><rect x="47.7273%" y="597" width="2.2727%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="1"/><text x="47.9773%" y="607.50">_..</text></g><g><title>curl::init::init_inner (1 samples, 2.27%)</title><rect x="47.7273%" y="581" width="2.2727%" height="15" fill="rgb(221,155,16)" fg:x="21" fg:w="1"/><text x="47.9773%" y="591.50">c..</text></g><g><title>std::sync::once::Once::call_inner (1 samples, 2.27%)</title><rect x="47.7273%" y="565" width="2.2727%" height="15" fill="rgb(215,215,53)" fg:x="21" fg:w="1"/><text x="47.9773%" y="575.50">s..</text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1 samples, 2.27%)</title><rect x="47.7273%" y="549" width="2.2727%" height="15" fill="rgb(223,4,10)" fg:x="21" fg:w="1"/><text x="47.9773%" y="559.50">s..</text></g><g><title>curl_global_init (1 samples, 2.27%)</title><rect x="47.7273%" y="533" width="2.2727%" height="15" fill="rgb(234,103,6)" fg:x="21" fg:w="1"/><text x="47.9773%" y="543.50">c..</text></g><g><title>ossl_init (1 samples, 2.27%)</title><rect x="47.7273%" y="517" width="2.2727%" height="15" fill="rgb(227,97,0)" fg:x="21" fg:w="1"/><text x="47.9773%" y="527.50">o..</text></g><g><title>OPENSSL_init_ssl (1 samples, 2.27%)</title><rect x="47.7273%" y="501" width="2.2727%" height="15" fill="rgb(234,150,53)" fg:x="21" fg:w="1"/><text x="47.9773%" y="511.50">O..</text></g><g><title>OPENSSL_init_crypto (1 samples, 2.27%)</title><rect x="47.7273%" y="485" width="2.2727%" height="15" fill="rgb(228,201,54)" fg:x="21" fg:w="1"/><text x="47.9773%" y="495.50">O..</text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 2.27%)</title><rect x="47.7273%" y="469" width="2.2727%" height="15" fill="rgb(222,22,37)" fg:x="21" fg:w="1"/><text x="47.9773%" y="479.50">C..</text></g><g><title>__pthread_once_slow (1 samples, 2.27%)</title><rect x="47.7273%" y="453" width="2.2727%" height="15" fill="rgb(237,53,32)" fg:x="21" fg:w="1"/><text x="47.9773%" y="463.50">_..</text></g><g><title>ossl_init_config_ossl_ (1 samples, 2.27%)</title><rect x="47.7273%" y="437" width="2.2727%" height="15" fill="rgb(233,25,53)" fg:x="21" fg:w="1"/><text x="47.9773%" y="447.50">o..</text></g><g><title>openssl_config_int (1 samples, 2.27%)</title><rect x="47.7273%" y="421" width="2.2727%" height="15" fill="rgb(210,40,34)" fg:x="21" fg:w="1"/><text x="47.9773%" y="431.50">o..</text></g><g><title>OPENSSL_init_crypto (1 samples, 2.27%)</title><rect x="47.7273%" y="405" width="2.2727%" height="15" fill="rgb(241,220,44)" fg:x="21" fg:w="1"/><text x="47.9773%" y="415.50">O..</text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 2.27%)</title><rect x="47.7273%" y="389" width="2.2727%" height="15" fill="rgb(235,28,35)" fg:x="21" fg:w="1"/><text x="47.9773%" y="399.50">C..</text></g><g><title>__pthread_once_slow (1 samples, 2.27%)</title><rect x="47.7273%" y="373" width="2.2727%" height="15" fill="rgb(210,56,17)" fg:x="21" fg:w="1"/><text x="47.9773%" y="383.50">_..</text></g><g><title>futex_wake (1 samples, 2.27%)</title><rect x="47.7273%" y="357" width="2.2727%" height="15" fill="rgb(224,130,29)" fg:x="21" fg:w="1"/><text x="47.9773%" y="367.50">f..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="47.7273%" y="341" width="2.2727%" height="15" fill="rgb(235,212,8)" fg:x="21" fg:w="1"/><text x="47.9773%" y="351.50">[..</text></g><g><title>cargo (23 samples, 52.27%)</title><rect x="0.0000%" y="645" width="52.2727%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="23"/><text x="0.2500%" y="655.50">cargo</text></g><g><title>_start (2 samples, 4.55%)</title><rect x="47.7273%" y="629" width="4.5455%" height="15" fill="rgb(219,149,13)" fg:x="21" fg:w="2"/><text x="47.9773%" y="639.50">_start</text></g><g><title>__libc_start_main (2 samples, 4.55%)</title><rect x="47.7273%" y="613" width="4.5455%" height="15" fill="rgb(250,156,29)" fg:x="21" fg:w="2"/><text x="47.9773%" y="623.50">__lib..</text></g><g><title>main (1 samples, 2.27%)</title><rect x="50.0000%" y="597" width="2.2727%" height="15" fill="rgb(216,193,19)" fg:x="22" fg:w="1"/><text x="50.2500%" y="607.50">m..</text></g><g><title>std::rt::lang_start_internal (1 samples, 2.27%)</title><rect x="50.0000%" y="581" width="2.2727%" height="15" fill="rgb(216,135,14)" fg:x="22" fg:w="1"/><text x="50.2500%" y="591.50">s..</text></g><g><title>std::panic::catch_unwind (1 samples, 2.27%)</title><rect x="50.0000%" y="565" width="2.2727%" height="15" fill="rgb(241,47,5)" fg:x="22" fg:w="1"/><text x="50.2500%" y="575.50">s..</text></g><g><title>std::panicking::try (1 samples, 2.27%)</title><rect x="50.0000%" y="549" width="2.2727%" height="15" fill="rgb(233,42,35)" fg:x="22" fg:w="1"/><text x="50.2500%" y="559.50">s..</text></g><g><title>std::panicking::try::do_call (1 samples, 2.27%)</title><rect x="50.0000%" y="533" width="2.2727%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="1"/><text x="50.2500%" y="543.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 2.27%)</title><rect x="50.0000%" y="517" width="2.2727%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="1"/><text x="50.2500%" y="527.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 2.27%)</title><rect x="50.0000%" y="501" width="2.2727%" height="15" fill="rgb(254,173,49)" fg:x="22" fg:w="1"/><text x="50.2500%" y="511.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 2.27%)</title><rect x="50.0000%" y="485" width="2.2727%" height="15" fill="rgb(221,1,38)" fg:x="22" fg:w="1"/><text x="50.2500%" y="495.50">s..</text></g><g><title>cargo::main (1 samples, 2.27%)</title><rect x="50.0000%" y="469" width="2.2727%" height="15" fill="rgb(206,124,46)" fg:x="22" fg:w="1"/><text x="50.2500%" y="479.50">c..</text></g><g><title>cargo::cli::main (1 samples, 2.27%)</title><rect x="50.0000%" y="453" width="2.2727%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="1"/><text x="50.2500%" y="463.50">c..</text></g><g><title>cargo::commands::metadata::exec (1 samples, 2.27%)</title><rect x="50.0000%" y="437" width="2.2727%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="1"/><text x="50.2500%" y="447.50">c..</text></g><g><title>cargo::core::shell::Shell::print_json (1 samples, 2.27%)</title><rect x="50.0000%" y="421" width="2.2727%" height="15" fill="rgb(235,61,29)" fg:x="22" fg:w="1"/><text x="50.2500%" y="431.50">c..</text></g><g><title>cargo::ops::cargo_output_metadata::_::&lt;impl serde::ser::Serialize for cargo::ops::cargo_output_metadata::ExportInfo&gt;::serialize (1 samples, 2.27%)</title><rect x="50.0000%" y="405" width="2.2727%" height="15" fill="rgb(219,207,3)" fg:x="22" fg:w="1"/><text x="50.2500%" y="415.50">c..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 2.27%)</title><rect x="50.0000%" y="389" width="2.2727%" height="15" fill="rgb(222,56,46)" fg:x="22" fg:w="1"/><text x="50.2500%" y="399.50">s..</text></g><g><title>cargo::core::package::_::&lt;impl serde::ser::Serialize for cargo::core::package::SerializedPackage&gt;::serialize (1 samples, 2.27%)</title><rect x="50.0000%" y="373" width="2.2727%" height="15" fill="rgb(239,76,54)" fg:x="22" fg:w="1"/><text x="50.2500%" y="383.50">c..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 2.27%)</title><rect x="50.0000%" y="357" width="2.2727%" height="15" fill="rgb(231,124,27)" fg:x="22" fg:w="1"/><text x="50.2500%" y="367.50">s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 2.27%)</title><rect x="50.0000%" y="341" width="2.2727%" height="15" fill="rgb(249,195,6)" fg:x="22" fg:w="1"/><text x="50.2500%" y="351.50">s..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="613" width="2.2727%" height="15" fill="rgb(237,174,47)" fg:x="23" fg:w="1"/><text x="52.5227%" y="623.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="597" width="2.2727%" height="15" fill="rgb(206,201,31)" fg:x="23" fg:w="1"/><text x="52.5227%" y="607.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="581" width="2.2727%" height="15" fill="rgb(231,57,52)" fg:x="23" fg:w="1"/><text x="52.5227%" y="591.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="565" width="2.2727%" height="15" fill="rgb(248,177,22)" fg:x="23" fg:w="1"/><text x="52.5227%" y="575.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="549" width="2.2727%" height="15" fill="rgb(215,211,37)" fg:x="23" fg:w="1"/><text x="52.5227%" y="559.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="533" width="2.2727%" height="15" fill="rgb(241,128,51)" fg:x="23" fg:w="1"/><text x="52.5227%" y="543.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="517" width="2.2727%" height="15" fill="rgb(227,165,31)" fg:x="23" fg:w="1"/><text x="52.5227%" y="527.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="501" width="2.2727%" height="15" fill="rgb(228,167,24)" fg:x="23" fg:w="1"/><text x="52.5227%" y="511.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="485" width="2.2727%" height="15" fill="rgb(228,143,12)" fg:x="23" fg:w="1"/><text x="52.5227%" y="495.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="469" width="2.2727%" height="15" fill="rgb(249,149,8)" fg:x="23" fg:w="1"/><text x="52.5227%" y="479.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="453" width="2.2727%" height="15" fill="rgb(243,35,44)" fg:x="23" fg:w="1"/><text x="52.5227%" y="463.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="437" width="2.2727%" height="15" fill="rgb(246,89,9)" fg:x="23" fg:w="1"/><text x="52.5227%" y="447.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="421" width="2.2727%" height="15" fill="rgb(233,213,13)" fg:x="23" fg:w="1"/><text x="52.5227%" y="431.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="52.2727%" y="405" width="2.2727%" height="15" fill="rgb(233,141,41)" fg:x="23" fg:w="1"/><text x="52.5227%" y="415.50">[..</text></g><g><title>__GI___libc_sigaction (1 samples, 2.27%)</title><rect x="54.5455%" y="597" width="2.2727%" height="15" fill="rgb(239,167,4)" fg:x="24" fg:w="1"/><text x="54.7955%" y="607.50">_..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="54.5455%" y="581" width="2.2727%" height="15" fill="rgb(209,217,16)" fg:x="24" fg:w="1"/><text x="54.7955%" y="591.50">[..</text></g><g><title>[unknown] (4 samples, 9.09%)</title><rect x="52.2727%" y="629" width="9.0909%" height="15" fill="rgb(219,88,35)" fg:x="23" fg:w="4"/><text x="52.5227%" y="639.50">[unknown]</text></g><g><title>__spawni_child (3 samples, 6.82%)</title><rect x="54.5455%" y="613" width="6.8182%" height="15" fill="rgb(220,193,23)" fg:x="24" fg:w="3"/><text x="54.7955%" y="623.50">__spawni_..</text></g><g><title>__execvpex (2 samples, 4.55%)</title><rect x="56.8182%" y="597" width="4.5455%" height="15" fill="rgb(230,90,52)" fg:x="25" fg:w="2"/><text x="57.0682%" y="607.50">__exe..</text></g><g><title>__execvpe_common (2 samples, 4.55%)</title><rect x="56.8182%" y="581" width="4.5455%" height="15" fill="rgb(252,106,19)" fg:x="25" fg:w="2"/><text x="57.0682%" y="591.50">__exe..</text></g><g><title>__GI_execve (2 samples, 4.55%)</title><rect x="56.8182%" y="565" width="4.5455%" height="15" fill="rgb(206,74,20)" fg:x="25" fg:w="2"/><text x="57.0682%" y="575.50">__GI_..</text></g><g><title>[unknown] (2 samples, 4.55%)</title><rect x="56.8182%" y="549" width="4.5455%" height="15" fill="rgb(230,138,44)" fg:x="25" fg:w="2"/><text x="57.0682%" y="559.50">[unkn..</text></g><g><title>[unknown] (2 samples, 4.55%)</title><rect x="56.8182%" y="533" width="4.5455%" height="15" fill="rgb(235,182,43)" fg:x="25" fg:w="2"/><text x="57.0682%" y="543.50">[unkn..</text></g><g><title>[unknown] (2 samples, 4.55%)</title><rect x="56.8182%" y="517" width="4.5455%" height="15" fill="rgb(242,16,51)" fg:x="25" fg:w="2"/><text x="57.0682%" y="527.50">[unkn..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="501" width="2.2727%" height="15" fill="rgb(248,9,4)" fg:x="26" fg:w="1"/><text x="59.3409%" y="511.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="485" width="2.2727%" height="15" fill="rgb(210,31,22)" fg:x="26" fg:w="1"/><text x="59.3409%" y="495.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="469" width="2.2727%" height="15" fill="rgb(239,54,39)" fg:x="26" fg:w="1"/><text x="59.3409%" y="479.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="453" width="2.2727%" height="15" fill="rgb(230,99,41)" fg:x="26" fg:w="1"/><text x="59.3409%" y="463.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="437" width="2.2727%" height="15" fill="rgb(253,106,12)" fg:x="26" fg:w="1"/><text x="59.3409%" y="447.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="421" width="2.2727%" height="15" fill="rgb(213,46,41)" fg:x="26" fg:w="1"/><text x="59.3409%" y="431.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="405" width="2.2727%" height="15" fill="rgb(215,133,35)" fg:x="26" fg:w="1"/><text x="59.3409%" y="415.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="389" width="2.2727%" height="15" fill="rgb(213,28,5)" fg:x="26" fg:w="1"/><text x="59.3409%" y="399.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="373" width="2.2727%" height="15" fill="rgb(215,77,49)" fg:x="26" fg:w="1"/><text x="59.3409%" y="383.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="357" width="2.2727%" height="15" fill="rgb(248,100,22)" fg:x="26" fg:w="1"/><text x="59.3409%" y="367.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="341" width="2.2727%" height="15" fill="rgb(208,67,9)" fg:x="26" fg:w="1"/><text x="59.3409%" y="351.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="325" width="2.2727%" height="15" fill="rgb(219,133,21)" fg:x="26" fg:w="1"/><text x="59.3409%" y="335.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="309" width="2.2727%" height="15" fill="rgb(246,46,29)" fg:x="26" fg:w="1"/><text x="59.3409%" y="319.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="59.0909%" y="293" width="2.2727%" height="15" fill="rgb(246,185,52)" fg:x="26" fg:w="1"/><text x="59.3409%" y="303.50">[..</text></g><g><title>__GI___clone (11 samples, 25.00%)</title><rect x="61.3636%" y="629" width="25.0000%" height="15" fill="rgb(252,136,11)" fg:x="27" fg:w="11"/><text x="61.6136%" y="639.50">__GI___clone</text></g><g><title>[unknown] (11 samples, 25.00%)</title><rect x="61.3636%" y="613" width="25.0000%" height="15" fill="rgb(219,138,53)" fg:x="27" fg:w="11"/><text x="61.6136%" y="623.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="597" width="22.7273%" height="15" fill="rgb(211,51,23)" fg:x="28" fg:w="10"/><text x="63.8864%" y="607.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="581" width="22.7273%" height="15" fill="rgb(247,221,28)" fg:x="28" fg:w="10"/><text x="63.8864%" y="591.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="565" width="22.7273%" height="15" fill="rgb(251,222,45)" fg:x="28" fg:w="10"/><text x="63.8864%" y="575.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="549" width="22.7273%" height="15" fill="rgb(217,162,53)" fg:x="28" fg:w="10"/><text x="63.8864%" y="559.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="533" width="22.7273%" height="15" fill="rgb(229,93,14)" fg:x="28" fg:w="10"/><text x="63.8864%" y="543.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="517" width="22.7273%" height="15" fill="rgb(209,67,49)" fg:x="28" fg:w="10"/><text x="63.8864%" y="527.50">[unknown]</text></g><g><title>[unknown] (10 samples, 22.73%)</title><rect x="63.6364%" y="501" width="22.7273%" height="15" fill="rgb(213,87,29)" fg:x="28" fg:w="10"/><text x="63.8864%" y="511.50">[unknown]</text></g><g><title>my_benchmark-3a (16 samples, 36.36%)</title><rect x="52.2727%" y="645" width="36.3636%" height="15" fill="rgb(205,151,52)" fg:x="23" fg:w="16"/><text x="52.5227%" y="655.50">my_benchmark-3a</text></g><g><title>_start (1 samples, 2.27%)</title><rect x="86.3636%" y="629" width="2.2727%" height="15" fill="rgb(253,215,39)" fg:x="38" fg:w="1"/><text x="86.6136%" y="639.50">_..</text></g><g><title>_dl_start (1 samples, 2.27%)</title><rect x="86.3636%" y="613" width="2.2727%" height="15" fill="rgb(221,220,41)" fg:x="38" fg:w="1"/><text x="86.6136%" y="623.50">_..</text></g><g><title>_dl_start_final (1 samples, 2.27%)</title><rect x="86.3636%" y="597" width="2.2727%" height="15" fill="rgb(218,133,21)" fg:x="38" fg:w="1"/><text x="86.6136%" y="607.50">_..</text></g><g><title>_dl_sysdep_start (1 samples, 2.27%)</title><rect x="86.3636%" y="581" width="2.2727%" height="15" fill="rgb(221,193,43)" fg:x="38" fg:w="1"/><text x="86.6136%" y="591.50">_..</text></g><g><title>dl_main (1 samples, 2.27%)</title><rect x="86.3636%" y="565" width="2.2727%" height="15" fill="rgb(240,128,52)" fg:x="38" fg:w="1"/><text x="86.6136%" y="575.50">d..</text></g><g><title>_dl_map_object_deps (1 samples, 2.27%)</title><rect x="86.3636%" y="549" width="2.2727%" height="15" fill="rgb(253,114,12)" fg:x="38" fg:w="1"/><text x="86.6136%" y="559.50">_..</text></g><g><title>_dl_catch_exception (1 samples, 2.27%)</title><rect x="86.3636%" y="533" width="2.2727%" height="15" fill="rgb(215,223,47)" fg:x="38" fg:w="1"/><text x="86.6136%" y="543.50">_..</text></g><g><title>openaux (1 samples, 2.27%)</title><rect x="86.3636%" y="517" width="2.2727%" height="15" fill="rgb(248,225,23)" fg:x="38" fg:w="1"/><text x="86.6136%" y="527.50">o..</text></g><g><title>_dl_map_object (1 samples, 2.27%)</title><rect x="86.3636%" y="501" width="2.2727%" height="15" fill="rgb(250,108,0)" fg:x="38" fg:w="1"/><text x="86.6136%" y="511.50">_..</text></g><g><title>_dl_map_object_from_fd (1 samples, 2.27%)</title><rect x="86.3636%" y="485" width="2.2727%" height="15" fill="rgb(228,208,7)" fg:x="38" fg:w="1"/><text x="86.6136%" y="495.50">_..</text></g><g><title>_dl_map_segments (1 samples, 2.27%)</title><rect x="86.3636%" y="469" width="2.2727%" height="15" fill="rgb(244,45,10)" fg:x="38" fg:w="1"/><text x="86.6136%" y="479.50">_..</text></g><g><title>__mmap64 (1 samples, 2.27%)</title><rect x="86.3636%" y="453" width="2.2727%" height="15" fill="rgb(207,125,25)" fg:x="38" fg:w="1"/><text x="86.6136%" y="463.50">_..</text></g><g><title>__mmap64 (1 samples, 2.27%)</title><rect x="86.3636%" y="437" width="2.2727%" height="15" fill="rgb(210,195,18)" fg:x="38" fg:w="1"/><text x="86.6136%" y="447.50">_..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="421" width="2.2727%" height="15" fill="rgb(249,80,12)" fg:x="38" fg:w="1"/><text x="86.6136%" y="431.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="405" width="2.2727%" height="15" fill="rgb(221,65,9)" fg:x="38" fg:w="1"/><text x="86.6136%" y="415.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="389" width="2.2727%" height="15" fill="rgb(235,49,36)" fg:x="38" fg:w="1"/><text x="86.6136%" y="399.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="373" width="2.2727%" height="15" fill="rgb(225,32,20)" fg:x="38" fg:w="1"/><text x="86.6136%" y="383.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="357" width="2.2727%" height="15" fill="rgb(215,141,46)" fg:x="38" fg:w="1"/><text x="86.6136%" y="367.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="341" width="2.2727%" height="15" fill="rgb(250,160,47)" fg:x="38" fg:w="1"/><text x="86.6136%" y="351.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="325" width="2.2727%" height="15" fill="rgb(216,222,40)" fg:x="38" fg:w="1"/><text x="86.6136%" y="335.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="309" width="2.2727%" height="15" fill="rgb(234,217,39)" fg:x="38" fg:w="1"/><text x="86.6136%" y="319.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="293" width="2.2727%" height="15" fill="rgb(207,178,40)" fg:x="38" fg:w="1"/><text x="86.6136%" y="303.50">[..</text></g><g><title>[unknown] (1 samples, 2.27%)</title><rect x="86.3636%" y="277" width="2.2727%" height="15" fill="rgb(221,136,13)" fg:x="38" fg:w="1"/><text x="86.6136%" y="287.50">[..</text></g><g><title>all (44 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="44"/><text x="0.2500%" y="671.50"></text></g><g><title>perf (5 samples, 11.36%)</title><rect x="88.6364%" y="645" width="11.3636%" height="15" fill="rgb(249,222,13)" fg:x="39" fg:w="5"/><text x="88.8864%" y="655.50">perf</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="629" width="11.3636%" height="15" fill="rgb(244,185,38)" fg:x="39" fg:w="5"/><text x="88.8864%" y="639.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="613" width="11.3636%" height="15" fill="rgb(236,202,9)" fg:x="39" fg:w="5"/><text x="88.8864%" y="623.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="597" width="11.3636%" height="15" fill="rgb(250,229,37)" fg:x="39" fg:w="5"/><text x="88.8864%" y="607.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="581" width="11.3636%" height="15" fill="rgb(206,174,23)" fg:x="39" fg:w="5"/><text x="88.8864%" y="591.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="565" width="11.3636%" height="15" fill="rgb(211,33,43)" fg:x="39" fg:w="5"/><text x="88.8864%" y="575.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="549" width="11.3636%" height="15" fill="rgb(245,58,50)" fg:x="39" fg:w="5"/><text x="88.8864%" y="559.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="533" width="11.3636%" height="15" fill="rgb(244,68,36)" fg:x="39" fg:w="5"/><text x="88.8864%" y="543.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="517" width="11.3636%" height="15" fill="rgb(232,229,15)" fg:x="39" fg:w="5"/><text x="88.8864%" y="527.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="501" width="11.3636%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="5"/><text x="88.8864%" y="511.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="485" width="11.3636%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="5"/><text x="88.8864%" y="495.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="469" width="11.3636%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="5"/><text x="88.8864%" y="479.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="453" width="11.3636%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="5"/><text x="88.8864%" y="463.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="437" width="11.3636%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="5"/><text x="88.8864%" y="447.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="421" width="11.3636%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="5"/><text x="88.8864%" y="431.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="405" width="11.3636%" height="15" fill="rgb(220,13,46)" fg:x="39" fg:w="5"/><text x="88.8864%" y="415.50">[unknown]</text></g><g><title>[unknown] (5 samples, 11.36%)</title><rect x="88.6364%" y="389" width="11.3636%" height="15" fill="rgb(239,221,27)" fg:x="39" fg:w="5"/><text x="88.8864%" y="399.50">[unknown]</text></g></svg></svg>